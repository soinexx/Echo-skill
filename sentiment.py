import random
from textblob import TextBlob

COMMENTARIES = {
    "self": {
        "positive": [
            "Звучит, будто вы нашли важный инсайт! Это отличный шаг в саморазвитии.",
            "Ваш ответ полон уверенности — так держать! Продолжайте исследовать свои мысли.",
            "Как здорово, что вы чувствуете прогресс! Это вдохновляет и других.",
            "Ваше отношение к себе восхищает! Такой настрой помогает расти.",
            "Кажется, вы обретаете ясность — это прекрасный результат самоанализа!",
            "Вы точно подметили свои сильные стороны — это ключ к развитию."
        ],
        "neutral": [
            "Спасибо за честность! Иногда нейтральные ответы — старт для глубоких открытий.",
            "Самоанализ — это путь без спешки. Дайте себе время, и всё прояснится.",
            "Интересно! Возможно, стоит подумать об этом чуть глубже.",
            "Нейтральная оценка — как чистый лист. Можете заполнить его позже.",
            "Не всегда нужно давать однозначные ответы. Иногда вопрос важнее.",
            "Этот ответ — начало диалога с самим собой. Вернитесь к нему через время."
        ],
        "negative": [
            "Спасибо, что поделились. Сложные эмоции — ключ к пониманию себя.",
            "Важно принимать даже негативные мысли — они часть роста.",
            "Кажется, это вызывает дискомфорт... Хотите попробовать другой вопрос?",
            "Иногда боль — сигнал к изменениям. Вы уже делаете важный шаг!",
            "Спасибо за откровенность. Самопознание не всегда бывает лёгким.",
            "Эти эмоции — часть вашего пути. Вы не обязаны решать всё сразу."
        ]
    },
    "couple": {
        "positive": [
            "Как здорово, что вы цените эти моменты! Это укрепляет доверие.",
            "Ваш ответ полон тепла — основа крепких отношений!",
            "Радостно слышать, что вы находите общий язык!",
            "Такие ответы — признак здоровых отношений. Так держать!",
            "Вы точно подметили сильные стороны вашей пары. Это ценно!",
            "Ваша взаимная поддержка чувствуется даже в голосе!"
        ],
        "neutral": [
            "Нейтральные эмоции — как белый лист. Может, стоит вместе его заполнить?",
            "Спасибо за искренность!",
            "Не всегда легко дать оценку. Попробуйте обсудить это вместе.",
            "Этот ответ — повод для нового диалога. Используйте его!",
        ],
        "negative": [
            "Спасибо, что делитесь трудностями. Диалог — первый шаг к решению.",
            "Открытость — ключ к пониманию. Хотите обсудить это вместе?",
            "Ваши эмоции понятны. Возможно, стоит найти точку опоры?",
            "Конфликты — часть любых отношений. Важно, как вы их решаете.",
            "Спасибо за честность. Иногда разногласия сближают.",
            "Этот ответ показывает, что вам не всё равно. Это уже важно."
        ]
    },
    "group": {
        "positive": [
            "Ваш оптимизм заряжает!",
            "Рады, что вы видите прогресс! Коллективу важно это слышать.",
            "Здорово, что вы отмечаете сильные стороны команды!",
            "Командный дух чувствуется в ваших словах! Так держать!",
            "Ваша оценка мотивирует на новые достижения!",
        ],
        "neutral": [
            "Нейтральные эмоции — повод задуматься: что можно улучшить?",
            "Спасибо за взвешенный ответ! Это сигнал к анализу процессов.",
            "Этот ответ стоит рассмотреть с разных ракурсов.",
            "Спокойный анализ — часто лучший способ найти истину."
        ],
        "negative": [
            "Спасибо за откровенность. Коллективный анализ часто даёт ответы.",
            "Важно работать над сложностями. Хотите обсудить решения?",
            "Ваш фидбек ценен. Возможно, поднять этот вопрос с командой?",
            "Критика — двигатель прогресса. Вы помогаете улучшениям!",
            "Спасибо, что обозначили проблему. Первый шаг к её решению.",
            "Ваша честность помогает команде развиваться."
        ]
    }
}

def analyze_sentiment(text: str) -> float:
    if not text.strip():
        return 0.0
    try:
        blob = TextBlob(text)
        return blob.sentiment.polarity
    except:
        return 0.0

def get_emotional_commentary(polarity: float, branch: str) -> str:
    if polarity > 0.3:
        sentiment = "positive"
    elif polarity < -0.3:
        sentiment = "negative"
    else:
        sentiment = "neutral"

    try:
        commentaries = COMMENTARIES[branch][sentiment]
    except KeyError:
        default = {
            "positive": ["Отличный ответ!", "Спасибо за позитив!"],
            "neutral": ["Спасибо за ответ!"],
            "negative": ["Спасибо за откровенность.", "Понимаю ваши чувства."]
        }
        commentaries = default.get(sentiment, ["Спасибо за ответ!"])

    return random.choice(commentaries)